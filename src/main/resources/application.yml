spring:
  application:
    name: dpis
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
  # Redis configuration for caching
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:Redis@123}
      timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
    cache-names:
      - ward_statistics
      - demographic_statistics
      - education_statistics
      - economic_statistics
      - frequently_accessed
      - rarely_updated
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:465}
    username: ${MAIL_USERNAME:user@example.com}
    password: ${MAIL_PASSWORD:dummypassword123}
    from: ${MAIL_FROM:mail@example.com} # Add this line
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
          timeout: 5000
          connectiontimeout: 5000
          writetimeout: 5000
        debug: ${MAIL_DEBUG:true}
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: always
      table-name: SPRING_SESSION
      schema: classpath:org/springframework/session/jdbc/schema-postgresql.sql
  jpa:
    open-in-view: false
    # hibernate:
    #   ddl-auto: validate
    # properties:
    #   hibernate:
    #     dialect: org.hibernate.dialect.PostgreSQLDialect
    #     format_sql: true
    #     show_sql: false

server:
  # Add server configuration
  tomcat:
    basedir: ${java.io.tmpdir}/tomcat-dpis
    # Configure access log directory if needed
    accesslog:
      directory: logs
      enabled: true
      prefix: access_log
      suffix: .log
      pattern: common

app:
  admin:
    email: ${ADMIN_EMAIL:admin@likhupike.gov.np}
    password: ${ADMIN_PASSWORD:Admin@123}
  minio:
    endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
    public-endpoint: ${MINIO_PUBLIC_ENDPOINT:http://localhost:9000}
    access-key: ${MINIO_ACCESS_KEY:minioadmin}
    secret-key: ${MINIO_SECRET_KEY:minioadmin}
    bucket: ${MINIO_BUCKET_NAME:dpis-bucket}
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  rate-limiting:
    enabled: ${RATE_LIMIT_ENABLED:true}
    # Global rate limiting
    global:
      capacity: 100
      refill-tokens: 100
      refill-duration: 10
      refill-time-unit: SECONDS
    # Endpoint-specific rate limits
    endpoints:
      auth:
        capacity: 20
        refill-tokens: 20
        refill-duration: 1
        refill-time-unit: MINUTES
      user-management:
        capacity: 100
        refill-tokens: 100
        refill-duration: 1
        refill-time-unit: MINUTES

jwt:
  secret-key: ${JWT_SECRET:464CC3302A0EF7195BD26AA6948E76B7CD112C735A42B3EF11E36FD39} # Change in production
  expiration: 24 # hours
  refresh-expiration: 168 # 7 days in hours

citizen-jwt:
  secret-key: ${CITIZEN_JWT_SECRET:464CC3302A0EF7195BD26AA6948E76B7CD112C735A42B3EG11E36FD39} # Change in production
  expiration: 1 # hours
  refresh-expiration: 168 # hours (1 week)

springdoc:
  api-docs:
    enabled: ${SWAGGER_ENABLED:false}
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:false}
    # Add additional customizations
    operations-sorter: alpha
    tags-sorter: alpha
    display-request-duration: true
    path: /swagger-ui.html
